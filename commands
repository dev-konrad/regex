<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Zoomable and Draggable Image</title>
    <style>
        .image-container {
            width: 500px; /* Set the desired width */
            height: 300px; /* Set the desired height */
            overflow: auto; /* Show scrollbars */
            position: relative;
            border: 1px solid #ccc; /* Optional border for visibility */
            cursor: grab;
        }

        .image-wrapper {
            position: relative;
            width: 100%;
            height: 100%;
        }

        #draggable-image {
            position: absolute;
            top: 0;
            left: 0;
            user-select: none;
            -webkit-user-drag: none;
            transform-origin: top left;
        }
    </style>
</head>
<body>
    <div class="image-container">
        <div class="image-wrapper">
            <img id="draggable-image" src="your-image.jpg" alt="Draggable">
        </div>
    </div>

    <script>
        const container = document.querySelector('.image-container');
        const img = document.getElementById('draggable-image');

        let isDragging = false;
        let startX, startY;
        let initialX = 0, initialY = 0;
        let scale = 1;

        container.addEventListener('mousedown', (e) => {
            isDragging = true;
            startX = e.clientX - initialX;
            startY = e.clientY - initialY;
            container.style.cursor = 'grabbing';
        });

        container.addEventListener('mousemove', (e) => {
            if (isDragging) {
                initialX = e.clientX - startX;
                initialY = e.clientY - startY;
                img.style.transform = `translate(${initialX}px, ${initialY}px) scale(${scale})`;
            }
        });

        container.addEventListener('mouseup', () => {
            isDragging = false;
            container.style.cursor = 'grab';
        });

        container.addEventListener('mouseleave', () => {
            isDragging = false;
            container.style.cursor = 'grab';
        });

        container.addEventListener('wheel', (e) => {
            if (e.ctrlKey) {
                e.preventDefault();
                const rect = img.getBoundingClientRect();
                const offsetX = (e.clientX - rect.left) / rect.width;
                const offsetY = (e.clientY - rect.top) / rect.height;

                const delta = e.deltaY > 0 ? -0.1 : 0.1;
                scale = Math.max(0.1, scale + delta);

                img.style.transformOrigin = `${offsetX * 100}% ${offsetY * 100}%`;
                img.style.transform = `translate(${initialX}px, ${initialY}px) scale(${scale})`;
            }
        });

        container.addEventListener('scroll', () => {
            const rect = container.getBoundingClientRect();
            const imgRect = img.getBoundingClientRect();

            // Ensure the image stays within the container bounds
            if (imgRect.left > rect.left) {
                img.style.transform = `translate(${initialX = 0}px, ${initialY}px) scale(${scale})`;
            }
            if (imgRect.top > rect.top) {
                img.style.transform = `translate(${initialX}px, ${initialY = 0}px) scale(${scale})`;
            }
            if (imgRect.right < rect.right) {
                img.style.transform = `translate(${initialX = rect.width - imgRect.width * scale}px, ${initialY}px) scale(${scale})`;
            }
            if (imgRect.bottom < rect.bottom) {
                img.style.transform = `translate(${initialX}px, ${initialY = rect.height - imgRect.height * scale}px) scale(${scale})`;
            }
        });
    </script>
</body>
</html>
